#!/bin/bash

# get our etc and bin dir
cwetcdir="$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)"
cwtop="$(cd "${cwetcdir}"/.. && pwd)"
cwbindir="$(cd "${cwetcdir}"/../bin && pwd)"

# CPPFLAGS - includes
: ${CPPFLAGS:=""}

# LDFLAGS - libraries
: ${LDFLAGS:=""}

# pkg-config
: ${PKG_CONFIG_LIBDIR:=""}
: ${PKG_CONFIG_PATH:=""}

# simple path functions
#   https://github.com/ryanwoodsmall/shell-ish/blob/master/lib/path-functions.sh
function append_path() {
  if $(echo ${PATH} | tr ':' '\n' | grep -q -- "^${1}$") ; then
    return
  fi
  export PATH="${PATH}:${1}"
}
function prepend_path() {
  export PATH="${1}:${PATH}"
}
function append_cppflags() {
  if $(echo ${CPPFLAGS} | tr ' ' '\n' | grep -q -- "^${1}$") ; then
    return
  fi
  export CPPFLAGS="${CPPFLAGS} ${1}"
}
function prepend_cppflags() {
  export CPPFLAGS="${1} ${CPPFLAGS}"
}
function append_ldflags() {
  if $(echo ${LDFLAGS} | tr ' ' '\n' | grep -q -- "^${1}$") ; then
    return
  fi
  export LDFLAGS="${LDFLAGS} ${1}"
}
function prepend_ldflags() {
  export LDFLAGS="${1} ${LDFLAGS}"
}
function append_pkgconfigpath() {
  if $(echo ${PKG_CONFIG_PATH} | tr ':' '\n' | grep -q -- "^${1}$") ; then
    return
  fi
  export PKG_CONFIG_PATH="${PKG_CONFIG_PATH}:${1}"
  export PKG_CONFIG_PATH="${PKG_CONFIG_PATH//::/:}"
  export PKG_CONFIG_LIBDIR="${PKG_CONFIG_PATH}"
}
function prepend_pkgconfigpath() {
  export PKG_CONFIG_PATH="${1}:${PKG_CONFIG_PATH}"
  export PKG_CONFIG_PATH="${PKG_CONFIG_PATH//::/:}"
  export PKG_CONFIG_LIBDIR="${PKG_CONFIG_PATH}"
}

# remove duplicate entries in a passed environment variable preserving order, i.e.,:
#   export LDFLAGS="$(remove_dupes ${LDFLAGS})"
# XXX - needs a delimiter specifier
function remove_dupes() {
  local -A aa
  local -a nv
  local i=0
  for a in ${@} ; do
    aa[${a}]=0
  done
  for a in ${@} ; do
    if [ ${aa[${a}]} != 1 ] ; then
      aa[${a}]=1
      nv[${i}]="${a}"
      i=$((${i}+1))
    fi
  done
  echo "${nv[@]}"
}

# add our bin dir to our path
append_path "${cwbindir}"

# profile.d holds packages' profile scriplets
# local.d holds custom scriptlets
profiled="profile.d"
locald="local.d"
for d in ${profiled} ${locald} ; do
  for p in ${cwetcdir}/${d}/*.sh ; do
    test -r "${p}" && source "${p}"
  done
done
